///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace BellWorkflow
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SignInUser2 recording.
    /// </summary>
    [TestModule("b46c4ae1-8d77-4458-a0f7-f7eb98086aa8", ModuleType.Recording, 1)]
    public partial class SignInUser2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the BellWorkflowRepository repository.
        /// </summary>
        public static BellWorkflowRepository repo = BellWorkflowRepository.Instance;

        static SignInUser2 instance = new SignInUser2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SignInUser2()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SignInUser2 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(0));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AdobeID.EmailPageEmailField' at 19;17.", repo.AdobeID.EmailPageEmailFieldInfo, new RecordItemIndex(1));
            repo.AdobeID.EmailPageEmailField.Click("19;17");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(2));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'esigntestuserprod{RShiftKey down}+{RShiftKey up}pr{o up}oteam{LShiftKey down}@{LShiftKey up}gmail.com{Return}' with focus on 'AdobeID.EmailPageEmailField'.", repo.AdobeID.EmailPageEmailFieldInfo, new RecordItemIndex(3));
            repo.AdobeID.EmailPageEmailField.PressKeys("esigntestuserprod{RShiftKey down}+{RShiftKey up}pr{o up}oteam{LShiftKey down}@{LShiftKey up}gmail.com{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(4));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Ech0{LShiftKey down}!@#${LShiftKey up}{Return}' with focus on 'Blank'.", repo.Blank.SelfInfo, new RecordItemIndex(5));
            repo.Blank.Self.EnsureVisible();
            Keyboard.Press("Ech0{LShiftKey down}!@#${LShiftKey up}{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.", new RecordItemIndex(6));
            Delay.Duration(10000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'AdobeLicensing.SpanTagOK' at 4;5.", repo.AdobeLicensing.SpanTagOKInfo, new RecordItemIndex(7));
            repo.AdobeLicensing.SpanTagOK.Click("4;5");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(8));
            Delay.Duration(2000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
